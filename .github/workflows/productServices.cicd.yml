name: CI/CD Pipeline for Service

on:
  pull_request:
    branches: [main] # Specify branches as needed
  push:
    branches: [main] 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: yarn install

      - name: Run build
        env: 
          PORT: ${{ secrets.PORT }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
          MONGODB_URL: ${{ secrets.MONGODB_URL }}
        run: yarn build

      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: ./build

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: ./build

      - name: Prepare Deployment Directories
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            set -e
            mkdir -p /home/ubuntu/apps/build
            mkdir -p /home/ubuntu/apps/build/configs

      - name: Copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: "./build/*"
          target: "/home/ubuntu/apps/build"
          strip_components: 1

      - name: Create .env file
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            set -e
            echo "NODE_ENV=production" > /home/ubuntu/apps/build/configs/.env.production
            echo "PORT=${{ secrets.PORT }}" >> /home/ubuntu/apps/build/configs/.env.production
            echo "MONGODB_URL=${{ secrets.MONGODB_URL }}" >> /home/ubuntu/apps/build/configs/.env.production

            - name: Install Dependencies and Restart Application
            uses: appleboy/ssh-action@master
            with:
              host: ${{ secrets.SERVER_IP }}
              username: ${{ secrets.SERVER_USERNAME }}
              key: ${{ secrets.SSH_PRIVATE_KEY }}
              port: 22
              script: |
                set -e
                # Install Node.js if not already installed
                if ! command -v node &> /dev/null; then
                  echo "Node.js not found. Installing Node.js and npm."
                  curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
                  sudo apt-get install -y nodejs
                fi
          
                # Verify if `yarn` is available and install if missing
                if ! command -v yarn &> /dev/null; then
                  echo "Yarn not found. Installing Yarn."
                  sudo npm install -g yarn
                fi
          
                # Verify if `pm2` is available and install if missing
                if ! command -v pm2 &> /dev/null; then
                  echo "PM2 not found. Installing PM2."
                  sudo npm install -g pm2
                fi
          
                # Navigate to the application directory
                cd /home/ubuntu/apps/build
          
                # Install production dependencies
                echo "Installing dependencies..."
                yarn install --production
          
                # Check if PM2 process is running and start/restart application
                if pm2 show product-service > /dev/null; then
                  echo "Application is running. Restarting..."
                  yarn restart
                else
                  echo "Application is not running. Starting..."
                  yarn start
                fi
          